/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gui;
import irc.Connection;
import java.awt.event.KeyEvent;
import javax.swing.KeyStroke;

/**
 *
 * @author stapl
 */
public class PopupPanel extends javax.swing.JPanel {
    private Connection connection;
    private HomeFrame homeFrame;
    private Popup popup;
    private String type;
    /** Creates a pop up panel 
     * 
     */
    public PopupPanel(HomeFrame homeFrame, Connection connection, Popup popup, String type) {
        initComponents();
        this.popup = popup;
        this.type = type;
        this.connection = connection;
        this.homeFrame = homeFrame;
        if(type.equalsIgnoreCase("create")){
            jLabel1.setText("Enter a channel name and press Ok.");
        } else if(type.equalsIgnoreCase("join")){
            jLabel1.setText("Enter an invite and press Ok.");
        } else if (type.equalsIgnoreCase("invite")){
            jLabel1.setText("Copy the invite and press Ok.");
            jTextField1.setText(connection.getInvite());
            jTextField1.setEditable(false);
        } else if (type.equalsIgnoreCase("delete")){
            jLabel1.setText("Retype the channel name and press Ok.");
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("jLabel1");

        jTextField1.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextField1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextField1KeyPressed(evt);
            }
        });

        jButton1.setText("OK");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(80, 80, 80)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabel1)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1))
                .addGap(80, 80, 80))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(jLabel1)
                .addGap(20, 20, 20)
                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20)
                .addComponent(jButton1)
                .addContainerGap(55, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        action();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jTextField1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField1KeyPressed
        if(KeyStroke.getKeyStrokeForEvent(evt) == KeyStroke.getKeyStroke(KeyEvent.VK_ENTER,0)){
           action();
        }
    }//GEN-LAST:event_jTextField1KeyPressed
    /** Sets the functionality of the pop up based on its type
     * 
     */
    private void action(){
        if(type.equalsIgnoreCase("create")){
            if(!jTextField1.getText().isEmpty()){
                connection.createChannel(jTextField1.getText());
            }
        } else if(type.equalsIgnoreCase("join")){
            if(!jTextField1.getText().isEmpty()){
                if(!connection.joinChannel(jTextField1.getText())){
                    jLabel1.setText("The channel could not be found.");
                    return;
                }
            }
        } else if (type.equalsIgnoreCase("delete")){
            if(jTextField1.getText().equalsIgnoreCase(connection.getChannel().getName())){
                connection.deleteChannel(connection.getChannel());
            } else{
                jLabel1.setText("The names did not match.");
                return;
            }
        }
        
        popup.dispatchEvent(new java.awt.event.WindowEvent(popup, java.awt.event.WindowEvent.WINDOW_CLOSING));
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables
}
